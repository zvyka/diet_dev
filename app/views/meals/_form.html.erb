<%= nested_form_for @meal do |f| %>  
  <%= f.hidden_field :user_id, :value => current_user.id %>
	<div class="row">
		<div class="twelve columns">
			<div class="panel">
				<ul class="block-grid three-up">
					<li>				
						<div>
					    <%= f.label :date_eaten, "Date eaten" %><br />
					    <%= f.text_field :date_eaten, :value => @meal.date_eaten ||= params[:date_eaten] ||= Date.today, :size => 8 %>
					  </div>
					</li>
					<li>
						<div>
					    <%= f.label :time_of_day, "Time of day" %><br />
							<%= f.select :time_of_day, [["Morning", 1], ["Afternoon", 2], ["Evening", 3], ["Night", 4]]%>
				  	</div>
					</li>
					<li>
						<div>
					    <%= f.label :location, "Location" %><br />
					    <%= f.select :location, [["The Diner", 1], ["South Campus", 2], ["251 North (Denton)", 3], ["Shops", 4], ["Off-Campus", 5], ["At Home/Dorm", 6]]  %>
				  	</div>
					</li>
				</ul>
			</div>
		</div>
	</div>
	<%= f.fields_for :ingredients do |ff|%>
		<div class="row">		
			<div class="twelve columns">
				<div class="panel">
					<div class="close-button"><%= ff.link_to_remove "Ã—" %></div>
					<div class="row">					
						<div class="eight columns">	
							<%= ff.label :what_food, "Food" %>
							<%= ff.text_field :what_food %>
							<%= ff.hidden_field :food_id %>
						</div>
						<div class="four columns">
							<%= ff.label :servings, "How many servings?" %>
							<%= ff.text_field :servings, :size => 5 %>
						</div>
						<!-- <%= ff.label :serving_size, "Serving size (grams)" %> -->
						<%= ff.hidden_field :serving_size, :size => 6 %>
					</div>
					<div class="row">
						<div class="four columns offset-by-eight">
							<span>One serving: </span><label id="serving_desc"></label><br/>
							<%= ff.check_box :fruits_and_vegetables, :default => false %>
							<%= ff.label :fruits_and_vegetables, "Fruit or vegetable?" %>
						</div>
					</div>
				</div>
			</div>
		</div>	
	<% end %>
	<p><%= f.link_to_add image_tag("add.png", :id => "add_food"), :ingredients, :class => "add_another_meal" %></p> 	
	<div class="row">
		<div class="twelve columns">		
			<div class="panel">		
				<p>
				<%= f.label :favorite, "Add this meal to your favorites?" %>
				<%= f.check_box :favorite, :default => false %>
					<div id="meal_fave">
						<%= f.label :fave_name, "Give this meal a name!" %>
						<%= f.text_field :fave_name %>
					</div>
				</p>
				<div>	  
					<p><%= f.submit "Submit Meal", :class => "nice small radius blue button" %></p>
				</div>
			</div>
		</div>	
	</div>
<% end %>

<script type="text/javascript">
$('#meal_favorite').click(function() {
  $('#meal_fave').toggle();
});

$('*[class*=add_another_meal]').click(function() {
	location.hash = location.hash + '#add';	
});


$(window).bind("hashchange load", function() {
	$('*[id*=what_food]').qtip({
	   content: '<i>Can\'t find what you\'re looking for? <b><%= link_to "Click here to add a custom food.", new_food_path %><b></i>',
		 hide: { when: 'unfocus', delay: 1000 },
	   position: {
	      corner: {
	         target: 'leftMiddle',
	         tooltip: 'rightMiddle'
	      }
	   },
	   style: { 
	      tip: 'rightMiddle', // Notice the corner value is identical to the previously mentioned positioning corners
	   		name: 'green'
		 }
	});
	
	$('*[class*=add_another_meal]').qtip({
	   content: 'Add Another Food',
		 hide: { when: 'unfocus', delay: 200 },
	   position: {
				target: $('*[id*=add_food]'),
	      corner: {
	      	         target: 'rightMiddle',
	      	         tooltip: 'leftMiddle'
	      	      }
	   },
	   style: { 
	      tip: 'leftMiddle', // Notice the corner value is identical to the previously mentioned positioning corners
	   		name: 'green'
		 }
	});
	
	$('*[id*=what_food]').autocomplete({ 
				// source: function (request, response) {
				//         var results = $.ui.autocomplete.filter('<%= foods_path(:format => :json) %>', request.term);
				// 
				//         // if (!results.length) {
				//         //     $("#no-results").text("No results found!");
				//         // } else {
				//         //     $("#no-results").empty();
				//         // }
				// 
				//         response(results);
				//     },
						// source: function( request, response ) {
						// 				$.ajax({
						// 					url: '<%= foods_path(:format => :json) %>',
						// 					dataType: "json",
						// 					data: {
						// 						style: "full",
						// 						maxRows: 12,
						// 						name_startsWith: request.term
						// 					},
						// 					success: function( data ) {
						// 						response( $.map( data.value, function( item ) {
						// 							return {
						// 								label: item.value,
						// 								value: item.food_id
						// 							}
						// 						}));
						// 					}
						// 				});
						// 			},
						// source: '<%= foods_path(:format => :json) %>',
						source: function( request, response ) {
										var term = request.term;

										$.getJSON( "<%= foods_path(:format => :json) %>", request, function( data, status, xhr ) {
											if(data == "") {
													response(['<strong>Sorry, this food was not found in our database.</strong>']);
													return;
											} 
												response( data );
										});
									},
				focus: function(event, ui) {
								
								if(ui.item.umd == 0 || ui.item.umd == 2) {
				           $(this).parent().parent().children('*[id*=serving_size]').val(ui.item ? ui.item.grams : 100);
									 $(this).parent().parent().parent().children().children().children("#serving_desc").text(ui.item ? ui.item.serving : "100 grams");
																	
				           if (ui.item) {
											if (ui.item.grams != 0){
				                $(this).parent().parent().children('*[id*=serving_size]').val(ui.item.grams);
													$(this).parent().parent().parent().children().children().children("#serving_desc").text(ui.item.serving + ' (' + ui.item.grams + ' grams)');
											} else {
												$(this).parent().parent().children('*[id*=serving_size]').val(ui.item.grams);
$(this).parent().parent().parent().children().children().children("#serving_desc").text(ui.item.serving);
											}
				           }
									 if (!ui.item.serving){
										 $(this).parent().parent().children('*[id*=serving_size]').val(100);
									   $(this).parent().parent().parent().children().children().children("#serving_desc").text('None given, based off of 100 grams');
									 }
								} else {
								  $(this).parent().parent().children('*[id*=serving_size]').text(ui.item.serving);
									$(this).parent().parent().parent().children().children().children("#serving_desc").text("Diner Portion");				
								}
								$(this).next().val(ui.item.food_id);
			       }
				});

$.ui.autocomplete.prototype._renderItem = function (ul, item) {
					the_term = this.term.split(' ').join('|');
          item.label = item.label.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + the_term + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong></strong>");
          return $("<li></li>")
                  .data("item.autocomplete", item)
                  .append("<a>" + item.label + "</a>")
                  .appendTo(ul);
      };
});
</script>
</script>